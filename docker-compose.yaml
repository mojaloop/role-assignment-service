version: "3.7"

networks:
  mojaloop-net:
    name: mojaloop-net

services:
  role-assignment-service:
    container_name: role-assignment-service
    image: mojaloop/role-assignment-service
    build:
      context: .
      cache_from:
        - mojaloop/role-assignment-service
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "3008:3008"
    networks:
      - mojaloop-net
    depends_on:
      moja-role-operator:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: wget -q http://172.17.0.1:3008/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s

  keto:
    container_name: keto
    image: oryd/keto:v0.12.0
    ports:
      - '4466:4466' # Read port
      - '4467:4467' # Write port
    volumes:
      - ./docker/keto.yml:/opt/keto/keto.yml
    command: serve --config /opt/keto/keto.yml
    networks:
      - mojaloop-net

  #keto-init:
  #  container_name: keto-init
  #  image: oryd/keto:v0.6.0-alpha.1-sqlite
  #  environment:
  #    - KETO_WRITE_REMOTE=keto:4467
  #  volumes:
  #    - ./docker/relation-tuples:/opt/relation-tuples
  #  command: relation-tuple create /opt/relation-tuples/init_tuples.json
  #  networks:
  #    - mojaloop-net

  central-ledger:
    image: mojaloop/central-ledger:v17.6.0
    container_name: central-ledger
    command: sh -c "/opt/app/scripts/wait4.js central-ledger && node src/api/index.js"
    ports:
      - "3001:3001"
    volumes:
      - ./docker/central-ledger/default.json:/opt/app/config/default.json
      - ./scripts/wait4.js:/opt/app/scripts/wait4.js
      - ./scripts/wait4.config.js:/opt/app/scripts/wait4.config.js
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=false
    networks:
      - mojaloop-net
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root

  objstore:
    image: mongo:latest
    container_name: objstore
    deploy:
      replicas: 1
    # Disable logging as it is far too verbose for debugging locally
    logging:
      driver: none
    ports:
      - "27017:27017"
    networks:
      - mojaloop-net
    # healthcheck:
    #   test: mongo --eval 'db.runCommand("ping").ok' localhost:27017/test --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s

  mysql:
    image: mysql/mysql-server
    container_name: mysql
    ports:
      - "3307:3306"
    volumes:
      # Note: this fixes the permissions issue, but docker-compose up will fail on first attempt
      - ./docker/sql-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-central_ledger}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-central_ledger}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  moja-role-operator:
    image: mojaloop/security-role-perm-operator-svc:v2.1.6
    container_name: moja-role-operator
    ports:
      - "23001:3001"
    environment:
      - LOG_LEVEL=info
      - ROLE_PERM_OPERATOR_ORY_KETO_READ_SERVICE_URL=http://keto:4466
      - ROLE_PERM_OPERATOR_ORY_KETO_WRITE_SERVICE_URL=http://keto:4467
    networks:
      - mojaloop-net
    depends_on:
      keto:
        condition: service_started
    user: root
    healthcheck:
      test: curl -f -s http://localhost:3001/health > /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.0
    user: root
    container_name: keycloak
    command: ['start-dev --import-realm']
    ports:
      - "8080:8080"
    depends_on:
      mysql-keycloak:
        condition: service_healthy
    volumes:
       - ./docker/realm-export.json:/opt/keycloak/data/import/realm.json
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_URL_HOST=mysql-keycloak
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HEALTH_ENABLED=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  mysql-keycloak:
    image: mysql:8.3.0
    container_name: mysql-keycloak
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=root_password
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
    networks:
      - mojaloop-net
